{"ast":null,"code":"var _jsxFileName = \"/home/kenmaqqe/Dev/usdt-curency-check-websocket/src/components/Web3Component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserProvider, formatEther } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Web3Component = () => {\n  _s();\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [error, setError] = useState(null);\n  const connectMetamask = async () => {\n    try {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\"\n        });\n        setAccount(accounts[0]);\n        const provider = new BrowserProvider(window.ethereum);\n        const balanceInWei = await provider.getBalance(accounts[0]);\n        const balanceInEth = formatEther(balanceInWei);\n        setBalance(balanceInEth);\n      } else {\n        setError(\"Будь ласка, встановіть Metamask\");\n      }\n    } catch (err) {\n      setError(`Помилка підключення: ${err.message}`);\n    }\n  };\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", accounts => {\n        setAccount(accounts[0]);\n        connectMetamask();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), !account ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"web3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectMetamask,\n        className: \"AddButton\",\n        children: \"\\u041F\\u0456\\u0434\\u043A\\u043B\\u044E\\u0447\\u0438\\u0442\\u0438 Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"web3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance-display\",\n        children: [\"\\u0411\\u0430\\u043B\\u0430\\u043D\\u0441: \", balance ? `${balance} ETH` : \"Завантаження...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Web3Component, \"g+QaBrJQQJjN/IpHXIwO7nRzPsQ=\");\n_c = Web3Component;\nexport default Web3Component;\nvar _c;\n$RefreshReg$(_c, \"Web3Component\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","formatEther","jsxDEV","_jsxDEV","Web3Component","_s","account","setAccount","balance","setBalance","error","setError","connectMetamask","window","ethereum","accounts","request","method","provider","balanceInWei","getBalance","balanceInEth","err","message","on","location","reload","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/kenmaqqe/Dev/usdt-curency-check-websocket/src/components/Web3Component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserProvider, formatEther } from \"ethers\";\n\nconst Web3Component = () => {\n  const [account, setAccount] = useState(null);\n  const [balance, setBalance] = useState(null);\n  const [error, setError] = useState(null);\n\n  const connectMetamask = async () => {\n    try {\n      if (window.ethereum) {\n        const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n        setAccount(accounts[0]);\n\n        const provider = new BrowserProvider(window.ethereum);\n        const balanceInWei = await provider.getBalance(accounts[0]);\n        const balanceInEth = formatEther(balanceInWei);\n        setBalance(balanceInEth);\n      } else {\n        setError(\"Будь ласка, встановіть Metamask\");\n      }\n    } catch (err) {\n      setError(`Помилка підключення: ${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.on(\"accountsChanged\", (accounts) => {\n        setAccount(accounts[0]);\n        connectMetamask();\n      });\n\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\n      {!account ? (\n        <div className=\"web3\">\n          <button onClick={connectMetamask} className=\"AddButton\">Підключити Metamask</button>\n        </div>\n      ) : (\n        <div className=\"web3\">\n          <div className=\"balance-display\">\n            Баланс: {balance ? `${balance} ETH` : \"Завантаження...\"}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Web3Component;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}